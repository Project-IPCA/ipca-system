events {
    worker_connections 1024;
}

http {

    include /etc/nginx/mime.types;

    default_type application/octet-stream;
    log_format custom '$remote_addr $proxy_add_x_forwarded_for - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$limit_req_status"';

    access_log /dev/stdout custom;
    error_log /dev/stderr;
    server_tokens off;
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
    limit_req_zone $binary_remote_addr zone=one:10m rate=50r/s;
    limit_req_zone $binary_remote_addr zone=two:10m rate=50r/s;
    
    server {
        listen 80;
        server_name ${SERVER_NAME};

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name ${SERVER_NAME};

        ssl_certificate ${SSL_CERTIFICATE};
        ssl_certificate_key ${SSL_CERTIFICATE_KEY};
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_ecdh_curve secp384r1;
        ssl_stapling on;
        ssl_stapling_verify on;
        

        location /super/ {
            limit_req zone=two burst=100 nodelay;
            limit_conn addr 5;
            proxy_pass http://ipca-super-frontend:3000;
            rewrite ^/super(/.*)$ $1 break;
        }


        location / {
	        limit_req zone=one burst=100 nodelay;
            limit_conn addr 5;
            proxy_pass http://ipca-frontend:3000;
        }

        location /api/ {
	        limit_req zone=api burst=200 nodelay;
            limit_conn addr 10;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Handle OPTIONS requests (preflight)
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://ipca-api:8300;
        }

        location /realtime/ {
            proxy_pass http://ipca-realtime:8080;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 24h;
            rewrite ^/realtime/(.*) /$1 break;
        }

        location /minio/ {
            proxy_pass http://ipca-minio:9000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_connect_timeout 300;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            chunked_transfer_encoding off;
            client_max_body_size 0;
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_set_header Origin '';
            rewrite ^/minio/(.*) /$1 break;
        }
    }
}
