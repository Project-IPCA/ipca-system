include:
  - path: ./ipca-frontend/docker-compose.prod.yml
    env_file: .env
  - path: ./ipca-backend/docker-compose.prod.yml
    env_file: .env
  - path: ./ipca-realtime-go/docker-compose.prod.yml
    env_file: .env
  - path: ./ipca-super-frontend/docker-compose.prod.yml
    env_file: .env
  - path: ./ipca-worker-go-v2/docker-compose.prod.yml
    env_file: .env

services:
  nginx:
    image: nginx:latest
    container_name: ipca-nginx
    restart: always
    volumes:
      - ./proxy/prod/nginx.conf.template:/etc/nginx/nginx.conf.template
      - ${SSL_CERTIFICATE}:${SSL_CERTIFICATE}
      - ${SSL_CERTIFICATE_KEY}:${SSL_CERTIFICATE_KEY}
      - ./script-nginx.sh:/script-nginx.sh
    ports:
      - 80:80
      - 443:443
      - 8301:8301
    environment:
      TZ: Asia/Bangkok
      SUPER_SERVER_NAME: ${SUPER_SERVER_NAME}
      STUDENT_SERVER_NAME: ${STUDENT_SERVER_NAME}
      SSL_CERTIFICATE: ${SSL_CERTIFICATE}
      SSL_CERTIFICATE_KEY: ${SSL_CERTIFICATE_KEY}
    command: /bin/bash /script-nginx.sh
    networks:
      - ipca-stack
    depends_on:
      - ipca-frontend
      - ipca-api
      - ipca-realtime

  redis:
    image: redis:7.0.15-alpine
    container_name: ipca-redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: unless-stopped
    expose:
      - ${REDIS_PORT}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    networks:
      - ipca-stack

  rabbitmq:
    image: rabbitmq:3.12.11-management-alpine
    container_name: ipca-rabbitmq
    restart: unless-stopped
    tty: true
    expose:
      - ${RABBITMQ_PORT}
    ports:
      - 15672:15672
    environment:
      TZ: Asia/Bangkok
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER} # Set default RabbitMQ user
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD} # Set default RabbitMQ password
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - ipca-stack

  minio:
    image: minio/minio:latest
    container_name: ipca-minio
    restart: unless-stopped
    ports:
      - 9001:9001
    expose:
      - 9000
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    command: server --console-address ":9001" /data
    networks:
      - ipca-stack

  ipca-mysql:
    image: mysql:8.0
    container_name: ipca-db
    restart: always
    expose:
      - ${DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      TZ: Asia/Bangkok
    volumes:
      - database_mysql:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ipca-stack

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.2.0
    container_name: ipca-phpmyadmin
    restart: always
    ports:
      - 8081:80
    environment:
      TZ: Asia/Bangkok
      PMA_HOST: ipca-mysql
    depends_on:
      - ipca-mysql
    networks:
      - ipca-stack

volumes:
  database_mysql:
  rabbitmq-data:
  minio-data:

networks:
  ipca-stack:
    external: true
